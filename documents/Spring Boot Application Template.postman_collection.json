{
	"info": {
		"_postman_id": "05b89f7a-1847-4204-aabd-1d481db900a2",
		"name": "Spring Boot Application Template",
		"description": "Postman collection for the Spring Boot Application Template\n\nhttps://github.com/Spring-Boot-Framework/Spring-Boot-Application-Template",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Website URL's",
			"item": [
				{
					"name": "Home Page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/sbat/index",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sbat",
								"index"
							]
						},
						"description": "http://localhost:8080\nHome Page. \nNo Login Required."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Actuator Endpoints",
			"item": [
				{
					"name": "/actuator/",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/actuator/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"actuator",
								""
							]
						},
						"description": "http://localhost:8080/actuator/"
					},
					"response": []
				},
				{
					"name": "/actuator/health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/actuator/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"actuator",
								"health"
							]
						},
						"description": "http://localhost:8080/actuator/health\r\n/actuator/health"
					},
					"response": []
				},
				{
					"name": "/actuator/info",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "johndoe",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/actuator/info",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"actuator",
								"info"
							]
						},
						"description": "http://localhost:8080/actuator/info\r\n/actuator/info"
					},
					"response": []
				},
				{
					"name": "/actuator/prometheus",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/actuator/prometheus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"actuator",
								"prometheus"
							]
						},
						"description": "http://localhost:8080/actuator/prometheus\r\n/actuator/prometheus"
					},
					"response": []
				},
				{
					"name": "/actuator/health/diskSpace",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/actuator/health/diskSpace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"actuator",
								"health",
								"diskSpace"
							]
						},
						"description": "http://localhost:8080/actuator/health/diskSpace"
					},
					"response": []
				},
				{
					"name": "/actuator/health/ping",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/actuator/health/ping",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"actuator",
								"health",
								"ping"
							]
						},
						"description": "http://localhost:8080/actuator/health/ping"
					},
					"response": []
				},
				{
					"name": "/actuator/health/db",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/actuator/health/db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"actuator",
								"health",
								"db"
							]
						},
						"description": "http://localhost:8080/actuator/health/db"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "RBAC User Endpoints",
			"item": [
				{
					"name": "RBAC User - Create",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Tenant",
								"value": "sbat_tenant_one",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"createdBy\": \"Installation\",\r\n    \"lastModifiedBy\": \"Installation\",\r\n    \"password\": \"$2y$10$TGK.5Z.gLBOBlXjFlXTCme4PQlGneVhYrhLuzosdL8jd3xvuuuvYe\",\r\n    \"username\": \"janehhhh\",\r\n    \"roles\": [\r\n        {\r\n            \"createdBy\": \"Installation\",\r\n            \"lastModifiedBy\": \"Installation\",\r\n            \"name\": \"ROLE_PERSON\",\r\n            \"permissions\": []\r\n        },\r\n        {\r\n            \"createdBy\": \"Installation\",\r\n            \"lastModifiedBy\": \"Installation\",\r\n            \"name\": \"ROLE_ADMIN\",\r\n            \"permissions\": [\r\n                {\r\n                    \"createdBy\": \"Installation\",\r\n                    \"lastModifiedBy\": \"Installation\",\r\n                    \"name\": \"PERSON_CREATE\"\r\n                },\r\n                {\r\n                    \"createdBy\": \"Installation\",\r\n                    \"lastModifiedBy\": \"Installation\",\r\n                    \"name\": \"PERSON_READ\"\r\n                },\r\n                {\r\n                    \"createdBy\": \"Installation\",\r\n                    \"lastModifiedBy\": \"Installation\",\r\n                    \"name\": \"PERSON_UPDATE\"\r\n                },\r\n                {\r\n                    \"createdBy\": \"Installation\",\r\n                    \"lastModifiedBy\": \"Installation\",\r\n                    \"name\": \"PERSON_DELETE\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"accountNonExpired\": true,\r\n    \"credentialsNonExpired\": true,\r\n    \"accountNonLocked\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/rbac/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rbac",
								"user"
							]
						},
						"description": "http://localhost:8080/user/person"
					},
					"response": []
				},
				{
					"name": "RBAC User - Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "368dbe68-62a9-4438-b21e-6a8e6c5c830d",
								"exec": [
									"pm.test('Get A RBAC User - XML Response', function()\r",
									"{\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/rbac/user/johnDoe",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rbac",
								"user",
								"johnDoe"
							]
						},
						"description": "http://localhost:8080/user/person/johndoetest"
					},
					"response": []
				},
				{
					"name": "RBAC User - Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5917936-659d-4a72-bad1-d53e968b4536",
								"exec": [
									"pm.test('Delete A RBAC User', function()\r",
									"{\r",
									"    pm.response.to.have.status(204);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/rbac/user/johndoe",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rbac",
								"user",
								"johndoe"
							]
						},
						"description": "http://localhost:8080/rbac/user/rbac2"
					},
					"response": []
				},
				{
					"name": "RBAC User - Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d6ee61b-471e-4031-8d56-d2444b0b0309",
								"exec": [
									"pm.test('Get All RBAC User\\'s', function()\r",
									"{\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/rbac/AdminUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rbac",
								"AdminUser"
							]
						},
						"description": "Get All RBAC Users"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Person Endpoints",
			"item": [
				{
					"name": "Get Person's - XML Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5891bbac-431c-4def-9ef3-131b4c3a74c1",
								"exec": [
									"pm.test('Get All Person\\'s - XML Response', function()\r",
									"{\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person"
							]
						},
						"description": "API - Get a JSON array of all Persons\nhttp://localhost:8080/api/person"
					},
					"response": []
				},
				{
					"name": "Get Person's - JSON Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d5b724b-6cea-448c-87c0-f8fd4d0e4957",
								"exec": [
									"pm.test('Get All Person\\'s - XML Response', function()\r",
									"{\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;      \r",
									"    pm.response.to.be.json;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lIiwiZXhwIjoxNjA1NDQ5MTk4fQ.Lkpgdp-BnFDIWtDAwKZN0R3CZd4nA2GMigdyzo8PE5wAyTSKfhsLOoUUnq4oSo4gE1q83rTjYEd6o-XkhAuqFMRH_aZxkQ39mdS3m4pBc6hdrOS6RyA4BArPRN0Mf-Xmm_jxVD2oAlzBupxLIQlZbMIPFObVw1b5VyoHujaoSgM-nDv0MPicwpltur03oJjL1nUW2uoL4P2B-Eob65C7cnrMmgBi9iNCgEIXZrAeF2BAHId5xRbWAtzCq3jtYNLgMcltlCCKdLf_XPnbdgEpeMYUFJxK1QDLjJl8Y1ELu-XGMe-Wxu53WLuQiCzZv8tJc7aRl_J-kP_wazElgHeoKg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person"
							]
						},
						"description": "API - Get a JSON array of all Persons\nhttp://localhost:8080/api/person"
					},
					"response": []
				},
				{
					"name": "Get Person by Id - XML Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40ae472c-4a79-4fad-80f1-98a2c9122f25",
								"exec": [
									"pm.test('Get A Person by ID - XML Response', function()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;      \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "johndoe",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person/18",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"18"
							]
						},
						"description": "GET a user by id in XML data format\nhttp://localhost:8080/api/person/1"
					},
					"response": []
				},
				{
					"name": "Get Existing Person by Id - JSON Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b47575aa-d7b6-4e28-8723-3062223bca8f",
								"exec": [
									"pm.test('Get Existing Person by ID - JSON Response', function()\r",
									"{\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;      \r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.name).to.be.a('string');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNjA1NTA4MTc5LCJleHAiOjE2MDU1MDgyNjl9.MR3P6KUELjMRoqpzF9FXVyPdw8fGw2burgFTYLDs1IoYSAkaj0o0cirgOafa-V1BxZGcV9DsdWJiLC7dhFaY2h2rNFmdz0k4H0DSoPrJqWii1ivtRUCnXvCyzuFzXbMs7BDMj3hQ7Mv0lYypxLHhL-zIGuElgffY99goQ-LIJCuyfYFzq0aSSua1IQRiVkkIzv0BqIep8VGnKaJUp1w6ZuZYnuvqBLOL30fhweegeTn3pwjbIHTQNeBd2Shk1ZVX9zeQ1WzyIfZKbDO5UBlIqmrPxcQsidiWVAyHFRRrYuzO6f0_qvPLACUWLX7Ca-SfQu3zkU7a7XVuNgHHlcJ4vQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-api-key",
								"type": "text",
								"value": "null"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/person/34",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"34"
							]
						},
						"description": "GET a user by id in XML data format\nhttp://localhost:8080/api/person/1"
					},
					"response": []
				},
				{
					"name": "Get Non-existent Person by Id - JSON Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b86acd43-8c1d-481f-9fdd-b732b672231c",
								"exec": [
									"pm.test('Get Non-existent Person by Id - JSON Response', function()\r",
									"{\r",
									"    pm.response.to.be.notFound\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.be.withBody;      \r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.error).to.be.a('string');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-api-key",
								"type": "text",
								"value": "null"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"0"
							]
						},
						"description": "GET a user by id in XML data format\nhttp://localhost:8080/api/person/1"
					},
					"response": []
				},
				{
					"name": "Update Existing Person by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "058092cd-fcaa-4fdf-9278-33aba7ae3765",
								"exec": [
									"pm.test('Update A Person by ID - JSON Response', function()\r",
									"{\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.be.withBody;      \r",
									"    pm.response.to.be.json;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-api-key",
								"type": "text",
								"value": "null"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ooooo\",\r\n\t\"username\": \"gfg5\",\r\n\t\"emailPrimary\": \"uuu@gmail.com\",\r\n    \"emailSecondary\": \"uu.howell@gmail.com\",\r\n    \"phone\":444,\r\n\t\"gender\": \"FEMALE\",\r\n\t\"age\": 35,\r\n\t\"password\": \"password\",\r\n\t\"dob\":\"25-12-2005\",\r\n\t\"isAdult\":false,\r\n\t\"address\": {\r\n\t\t\"street\": \"Victor Plains\",\r\n\t\t\"suite\": \"Suite 879\",\r\n\t\t\"city\": \"Wisokyburgh\",\r\n\t\t\"zipcode\": \"90566-7771\",\r\n\t\t\"geo\": {\r\n\t\t\t\"lat\": \"-43.9589\",\r\n\t\t\t\"lng\": \"-34.4628\"\r\n\t\t}\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/person/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"1"
							]
						},
						"description": "Update a person by ID\nhttp://localhost:8080/api/person/1"
					},
					"response": []
				},
				{
					"name": "Update Non-existent Person by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ceadcea9-94b4-4ff8-ae44-43504894cba9",
								"exec": [
									"pm.test('Update A Person by ID - JSON Response', function()\r",
									"{\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.be.withBody;      \r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.error).to.eql(\"Not Found\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-api-key",
								"type": "text",
								"value": "null"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ooooo\",\r\n\t\"username\": \"gfg5\",\r\n\t\"emailPrimary\": \"uuu@gmail.com\",\r\n    \"emailSecondary\": \"uu.howell@gmail.com\",\r\n    \"phone\":444,\r\n\t\"gender\": \"FEMALE\",\r\n\t\"age\": 35,\r\n\t\"password\": \"password\",\r\n\t\"dob\":\"25-12-2005\",\r\n\t\"isAdult\":false,\r\n\t\"address\": {\r\n\t\t\"street\": \"Victor Plains\",\r\n\t\t\"suite\": \"Suite 879\",\r\n\t\t\"city\": \"Wisokyburgh\",\r\n\t\t\"zipcode\": \"90566-7771\",\r\n\t\t\"geo\": {\r\n\t\t\t\"lat\": \"-43.9589\",\r\n\t\t\t\"lng\": \"-34.4628\"\r\n\t\t}\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/person/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"0"
							]
						},
						"description": "Update a person by ID\nhttp://localhost:8080/api/person/1"
					},
					"response": []
				},
				{
					"name": "Delete Person by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0be23ff-15b3-46b8-bc12-a1c0dfd80dbe",
								"exec": [
									"pm.test('Delete A Person', function()\r",
									"{\r",
									"    pm.response.to.have.status(204);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person/66",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"66"
							]
						},
						"description": "DELETE\r\n/api/person/3\r\nhttp://localhost:8080/api/person/3"
					},
					"response": []
				},
				{
					"name": "Delete Non-existent Person by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a8567bb-8a25-4191-ac78-2d05be15a92c",
								"exec": [
									"pm.test('Delete a Non-existent Person by ID', function()\r",
									"{\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.be.withBody;      \r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.error).to.eql(\"Not Found\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-api-key",
								"type": "text",
								"value": "null"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"0"
							]
						},
						"description": "DELETE\r\n/api/person/3\r\nhttp://localhost:8080/api/person/3"
					},
					"response": []
				},
				{
					"name": "Create Person",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"kkkkkllk\",\r\n\t\"username\": \"ssskets\",\r\n\t\"emailPrimary\": \"owektsw@gmail.com\",\r\n\t\"emailSecondary\": \"wwwkestw@gmail.com\",\r\n\t\"phone\":1781461,\r\n\t\"gender\": \"FEMALE\",\r\n\t\"age\": 25,\r\n\t\"password\": \"password\",\r\n\t\"dob\":\"25-12-2005\",\r\n\t\"isAdult\":true,\r\n\t\"address\": {\r\n\t\t\"street\": \"Jane Plains\",\r\n\t\t\"suite\": \"Suite 779\",\r\n\t\t\"city\": \"Wisokyburghh\",\r\n\t\t\"zipcode\": \"90565-7771\",\r\n\t\t\"geo\": {\r\n\t\t\t\"lat\": \"-43.9589\",\r\n\t\t\t\"lng\": \"-34.4628\"\r\n\t\t}\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person"
							]
						},
						"description": "http://localhost:8080/api/v1/person"
					},
					"response": []
				},
				{
					"name": "Get Person's by Gender",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person/gender/FEMALE",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"gender",
								"FEMALE"
							]
						},
						"description": "http://localhost:8080/api/v1/person/gender/MALE"
					},
					"response": []
				},
				{
					"name": "Get Person's - Pageable",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-api-key",
								"type": "text",
								"value": "null"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person/pageable?size=500&pageNumber=5&sort=id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"pageable"
							],
							"query": [
								{
									"key": "size",
									"value": "500"
								},
								{
									"key": "pageNumber",
									"value": "5"
								},
								{
									"key": "sort",
									"value": "id"
								}
							]
						},
						"description": "http://localhost:8080/api/v1/person/pageable?page=1&size=1&sort=createdDate,desc"
					},
					"response": []
				},
				{
					"name": "/api/person/pageable",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/person/pageable?page=0&size=10&sort=createdBy,desc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"person",
								"pageable"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "createdBy,desc"
								}
							]
						},
						"description": "http://localhost:8080/api/personPageable?page=0&size=2&sort=createdOn,desc"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Person Management Endpoint",
			"item": [
				{
					"name": "Get Person's - JSON Response",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-TenantID",
								"value": "sbat_tenant_two",
								"type": "text"
							},
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/management/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"management",
								"person"
							]
						},
						"description": "http://localhost:8080/management/api/v1/person/669"
					},
					"response": []
				},
				{
					"name": "Delete Person by Id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/management/person/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"management",
								"person",
								"2"
							]
						},
						"description": "http://localhost:8080/management/api/v1/person/669"
					},
					"response": []
				},
				{
					"name": "Get Person's - Pageable",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/management/person/pageable?page=1&size=2&sort=createdDate,desc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"management",
								"person",
								"pageable"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "2"
								},
								{
									"key": "sort",
									"value": "createdDate,desc"
								}
							]
						},
						"description": "http://localhost:8080/management/api/v1/person/pageable?page=1&size=1&sort=createdOn,desc"
					},
					"response": []
				},
				{
					"name": "Update Person by Id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-api-key",
								"type": "text",
								"value": "null"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"33335l\",\r\n\t\"username\": \"aaaa\",\r\n\t\"emailPrimary\": \"aaaa@gmail.com\",\r\n\t\"emailSecondary\": \"ffff.howell@gmail.com\",\r\n\t\"phone\":11111333,\r\n\t\"gender\": \"FEMALE\",\r\n\t\"age\": 25,\r\n\t\"password\": \"password\",\r\n\t\"dob\":\"25-12-2005\",\r\n\t\"isAdult\":true,\r\n\t\"address\": {\r\n\t\t\"street\": \"Jane Plains\",\r\n\t\t\"suite\": \"Suite 779\",\r\n\t\t\"city\": \"Wisokyburghh\",\r\n\t\t\"zipcode\": \"90565-7771\",\r\n\t\t\"geo\": {\r\n\t\t\t\"lat\": \"-43.9589\",\r\n\t\t\t\"lng\": \"-34.4628\"\r\n\t\t}\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/management/person/33",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"management",
								"person",
								"33"
							]
						},
						"description": "http://localhost:8080/management/api/v1/person"
					},
					"response": []
				},
				{
					"name": "Get Person by Id - JSON Response",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/management/person/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"management",
								"person",
								"12"
							]
						},
						"description": "http://localhost:8080/management/api/v1/person/6"
					},
					"response": []
				},
				{
					"name": "Create Person",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "AdminUser",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-api-key",
								"value": "null",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"hfghghf\",\r\n\t\"username\": \"hhgfhghg\",\r\n\t\"emailPrimary\": \"555hhgfll@gmail.com\",\r\n\t\"emailSecondary\": \"55fdhdgll@gmail.com\",\r\n\t\"phone\":55656000,\r\n\t\"gender\": \"FEMALE\",\r\n\t\"age\": 25,\r\n\t\"password\": \"password\",\r\n\t\"dob\":\"25-12-2005\",\r\n\t\"isAdult\":true,\r\n\t\"address\": {\r\n\t\t\"street\": \"Jane Plains\",\r\n\t\t\"suite\": \"Suite 779\",\r\n\t\t\"city\": \"Wisokyburghh\",\r\n\t\t\"zipcode\": \"90565-7771\",\r\n\t\t\"geo\": {\r\n\t\t\t\"lat\": \"-43.9589\",\r\n\t\t\t\"lng\": \"-34.4628\"\r\n\t\t}\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/management/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"management",
								"person"
							]
						},
						"description": "http://localhost:8080/management/api/v1/person"
					},
					"response": []
				}
			],
			"description": "Person Management Endpoint",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Other Simple Endpoints",
			"item": [
				{
					"name": "/api/generic-hello",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/personalized-hello?",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"personalized-hello"
							],
							"query": [
								{
									"key": "",
									"value": null
								}
							]
						},
						"description": "http://localhost:8088/api/generic-hello"
					},
					"response": []
				},
				{
					"name": "/api/loggers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/loggers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"loggers"
							]
						},
						"description": "http://localhost:8080/api/loggers"
					},
					"response": []
				},
				{
					"name": "/api/personalized-hello?name=springboot%20application",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/personalized-hello?name=springboot%20application",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"personalized-hello"
							],
							"query": [
								{
									"key": "name",
									"value": "springboot%20application"
								}
							]
						},
						"description": "http://localhost:8088/api/personalized-hello?name=springboot%20application"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "user signup",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"johndoe8\",\r\n    \"email\":\"johndoe8@domain.com\",\r\n    \"password\":\"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						},
						"description": "http://localhost:8080/api/v1/auth/signup"
					},
					"response": []
				},
				{
					"name": "user login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"johndoe\",\r\n    \"password\":\"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "http://localhost:8080/api/v1/auth/login"
					},
					"response": []
				},
				{
					"name": "user logout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\":\"0c63c802-b360-4761-a034-d734a90a0282\",\r\n    \"username\":\"johndoe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "http://localhost:8080/api/v1/auth/logout"
					},
					"response": []
				},
				{
					"name": "get refresh token",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\":\"7fbac449-c548-4a9e-b8e2-b7d8f5848ed1\",\r\n    \"username\":\"johndoe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/auth/refresh/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"auth",
								"refresh",
								"token"
							]
						},
						"description": "http://localhost:8080/api/v1/auth/refresh/token"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "johnDoe",
				"type": "string"
			},
			{
				"key": "password",
				"value": "password",
				"type": "string"
			}
		]
	},
	"protocolProfileBehavior": {}
}